{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.user = null;\n    this.baseUrl = \"http://localhost:8080/admin\";\n    this.baseUrl1 = \"http://localhost:8080/user/login\";\n  }\n  getUsersList() {\n    return this.httpClient.get(`${this.baseUrl}/users`);\n  }\n  createUsers(user) {\n    return this.httpClient.post(`${this.baseUrl}/newregistration`, user);\n  }\n  getUserById(id) {\n    return this.httpClient.get(`${this.baseUrl}/${id}`);\n  }\n  updateUsers(id, user) {\n    return this.httpClient.put(`${this.baseUrl}/user/update/${id}`, user);\n  }\n  deleteuser(id) {\n    return this.httpClient.delete(`${this.baseUrl}/user/delete/${id}`);\n  }\n  Login(user) {\n    return this.httpClient.post(`${this.baseUrl1}`, user);\n  }\n  createProduct(product) {\n    return this.httpClient.post(`${this.baseUrl}/product/add`, product);\n  }\n  getProductsList() {\n    return this.httpClient.get(`${this.baseUrl}/products`);\n  }\n  getproductById(id) {\n    return this.httpClient.get(`${this.baseUrl}/product/${id}`);\n  }\n  updateproduct(id, product) {\n    return this.httpClient.put(`${this.baseUrl}/product/update/${id}`, product);\n  }\n  deleteproduct(id) {\n    return this.httpClient.delete(`${this.baseUrl}/product/delete/${id}`);\n  }\n  getCategoriesList() {\n    return this.httpClient.get(`${this.baseUrl}/categories`);\n  }\n  createCategory(category) {\n    return this.httpClient.post(`${this.baseUrl}/category/add`, category);\n  }\n  updatecategory(id, category) {\n    return this.httpClient.put(`${this.baseUrl}/category/update/${id}`, category);\n  }\n  getCategoryById(id) {\n    return this.httpClient.get(`${this.baseUrl}/product/${id}`);\n  }\n  deletecategory(id) {\n    return this.httpClient.delete(`${this.baseUrl}/category/delete/${id}`);\n  }\n  getCartList() {\n    return this.httpClient.get(`${this.baseUrl}/carts`);\n  }\n  getuserforCart() {\n    return this.user;\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","httpClient","user","baseUrl","baseUrl1","getUsersList","get","createUsers","post","getUserById","id","updateUsers","put","deleteuser","delete","Login","createProduct","product","getProductsList","getproductById","updateproduct","deleteproduct","getCategoriesList","createCategory","category","updatecategory","getCategoryById","deletecategory","getCartList","getuserforCart","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vidhy\\vs-workspace\\Angular\\Cafe_Application\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Users } from './users';\nimport { HttpClient} from '@angular/common/http';\nimport { Products } from './products';\nimport { Category } from './category';\nimport { Cart } from './cart';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private user :Users | null=null;\n  private baseUrl=\"http://localhost:8080/admin\";\n  private baseUrl1=\"http://localhost:8080/user/login\"\n  constructor(private httpClient:HttpClient) { }\n\n  getUsersList():Observable<Users[]>{\n    return this.httpClient.get<Users[]>(`${this.baseUrl}/users`);\n  }\n\n  createUsers(user:Users):Observable<Object>{\n    return this.httpClient.post(`${this.baseUrl}/newregistration`,user);\n  }\n\n  getUserById(id:number):Observable<Users>{\n    return this.httpClient.get<Users>(`${this.baseUrl}/${id}`);\n  }\n\n  updateUsers(id:number,user:Users):Observable<Object>{\n    return this.httpClient.put(`${this.baseUrl}/user/update/${id}`,user);\n  }\n\n  deleteuser(id:number):Observable<Object>{\n    return this.httpClient.delete(`${this.baseUrl}/user/delete/${id}`);\n  }\n\n  Login(user:Users):Observable<object>{\n    return this.httpClient.post(`${this.baseUrl1}`,user);\n  }\n\n  createProduct(product:Products):Observable<Object>{\n    return this.httpClient.post(`${this.baseUrl}/product/add`,product);\n  }\n\n  getProductsList():Observable<Products[]>{\n    return this.httpClient.get<Products[]>(`${this.baseUrl}/products`);\n  }\n\n  getproductById(id:number):Observable<Products>{\n    return this.httpClient.get<Products>(`${this.baseUrl}/product/${id}`);\n  }\n\n  updateproduct(id:number,product:Products):Observable<Object>{\n    return this.httpClient.put(`${this.baseUrl}/product/update/${id}`,product);\n  }\n\n  deleteproduct(id:number):Observable<Object>{\n    return this.httpClient.delete(`${this.baseUrl}/product/delete/${id}`);\n  }\n\n  getCategoriesList():Observable<Category[]>{\n    return this.httpClient.get<Category[]>(`${this.baseUrl}/categories`);\n  }\n\n  createCategory(category: Category) {\n    return this.httpClient.post(`${this.baseUrl}/category/add`,category);\n  }\n\n  updatecategory(id: number, category: Category) {\n    return this.httpClient.put(`${this.baseUrl}/category/update/${id}`,category);\n  }\n\n  getCategoryById(id: number) {\n     return this.httpClient.get<Category>(`${this.baseUrl}/product/${id}`);\n  }\n\n  deletecategory(id:number):Observable<Object>{\n    return this.httpClient.delete(`${this.baseUrl}/category/delete/${id}`);\n  }\n\n  getCartList():Observable<Cart[]>{\n    return this.httpClient.get<Cart[]>(`${this.baseUrl}/carts`);\n  }\n\n  getuserforCart():Users | null\n  {\n    return this.user;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}