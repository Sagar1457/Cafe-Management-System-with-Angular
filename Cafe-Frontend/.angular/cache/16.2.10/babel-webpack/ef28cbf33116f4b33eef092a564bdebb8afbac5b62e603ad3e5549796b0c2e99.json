{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(Logservice, router) {\n    this.Logservice = Logservice;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.Logservice.isAuthenticatedUser()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","Logservice","router","canActivate","isAuthenticatedUser","navigate","_","i0","ɵɵinject","i1","LoginService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vidhy\\vs-workspace\\Angular\\Cafe_Application\\src\\app\\auth-guard.ts"],"sourcesContent":["import { CanActivate, CanActivateFn, Router } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport { LoginService } from \"./login.service\";\n@Injectable({\n    providedIn: 'root'\n  })\nexport class AuthGuard implements CanActivate{\n\n    constructor(private Logservice: LoginService, private router: Router) {}\n    canActivate(): boolean {\n      if (this.Logservice.isAuthenticatedUser()) {\n        return true;\n      } else {\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }\n}\n"],"mappings":";;;AAMA,OAAM,MAAOA,SAAS;EAElBC,YAAoBC,UAAwB,EAAUC,MAAc;IAAhD,KAAAD,UAAU,GAAVA,UAAU;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAW;EACvEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,UAAU,CAACG,mBAAmB,EAAE,EAAE;MACzC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAVQP,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATd,SAAS;IAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;IAAAC,UAAA,EAFN;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}