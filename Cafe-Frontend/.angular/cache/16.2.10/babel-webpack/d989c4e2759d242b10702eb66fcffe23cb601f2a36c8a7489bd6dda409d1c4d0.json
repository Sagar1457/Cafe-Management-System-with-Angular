{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user.service\";\nexport class LoginService {\n  constructor(httpClient, userservice) {\n    this.httpClient = httpClient;\n    this.userservice = userservice;\n    this.user = null;\n    this.isAuthenticated = false;\n    this.cart = null;\n    this.baseUrl1 = \"http://localhost:8080/user/login\";\n  }\n  login(user) {\n    return this.httpClient.post(`${this.baseUrl1}`, user);\n  }\n  logout() {\n    this.isAuthenticated = false, this.user = null;\n    ;\n  }\n  isAuthenticatedUser() {\n    return this.isAuthenticated;\n  }\n  setUserLogin(user) {\n    this.user = user;\n  }\n  getUserLogin() {\n    return this.user;\n  }\n  getuserforCart() {\n    return this.user;\n  }\n  getUserproducts(cart) {\n    return this.cart;\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LoginService","constructor","httpClient","userservice","user","isAuthenticated","cart","baseUrl1","login","post","logout","isAuthenticatedUser","setUserLogin","getUserLogin","getuserforCart","getUserproducts","_","i0","ɵɵinject","i1","HttpClient","i2","UserService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vidhy\\vs-workspace\\Angular\\Cafe_Application\\src\\app\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Users } from './users';\nimport { Cart } from './cart';\nimport { UserService } from './user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n private user:Users | null=null;\n\n private isAuthenticated = false;\n\n private cart:Cart | null=null;\n\n  constructor(private httpClient:HttpClient,private userservice:UserService) { }\n\n  private baseUrl1=\"http://localhost:8080/user/login\";\n\n    \n  login(user:Users):Observable<object>{\n    return this.httpClient.post(`${this.baseUrl1}`,user);\n  }\n\n  logout() {\n    this.isAuthenticated = false,this.user=null;;\n  }\n\n  isAuthenticatedUser(): boolean {\n    return this.isAuthenticated;\n  }\n\n  setUserLogin(user: Users) {\n    this.user = user;\n  }\n\n  getUserLogin(): Users | null {\n    return this.user;\n  }\n\n  getuserforCart():Users | null\n  {\n    return this.user;\n  }\n\n  getUserproducts(cart:Cart){\n    return this.cart;\n  }\n\n  \n}\n"],"mappings":";;;AAUA,OAAM,MAAOA,YAAY;EAQvBC,YAAoBC,UAAqB,EAASC,WAAuB;IAArD,KAAAD,UAAU,GAAVA,UAAU;IAAoB,KAAAC,WAAW,GAAXA,WAAW;IANtD,KAAAC,IAAI,GAAc,IAAI;IAEtB,KAAAC,eAAe,GAAG,KAAK;IAEvB,KAAAC,IAAI,GAAa,IAAI;IAIpB,KAAAC,QAAQ,GAAC,kCAAkC;EAF0B;EAK7EC,KAAKA,CAACJ,IAAU;IACd,OAAO,IAAI,CAACF,UAAU,CAACO,IAAI,CAAC,GAAG,IAAI,CAACF,QAAQ,EAAE,EAACH,IAAI,CAAC;EACtD;EAEAM,MAAMA,CAAA;IACJ,IAAI,CAACL,eAAe,GAAG,KAAK,EAAC,IAAI,CAACD,IAAI,GAAC,IAAI;IAAC;EAC9C;EAEAO,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACN,eAAe;EAC7B;EAEAO,YAAYA,CAACR,IAAW;IACtB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAS,YAAYA,CAAA;IACV,OAAO,IAAI,CAACT,IAAI;EAClB;EAEAU,cAAcA,CAAA;IAEZ,OAAO,IAAI,CAACV,IAAI;EAClB;EAEAW,eAAeA,CAACT,IAAS;IACvB,OAAO,IAAI,CAACA,IAAI;EAClB;EAAC,QAAAU,CAAA,G;qBAxCUhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZvB,YAAY;IAAAwB,OAAA,EAAZxB,YAAY,CAAAyB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}